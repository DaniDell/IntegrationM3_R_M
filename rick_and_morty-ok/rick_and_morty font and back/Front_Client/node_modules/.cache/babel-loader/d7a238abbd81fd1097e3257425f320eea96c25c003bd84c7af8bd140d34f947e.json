{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Pc\\\\Desktop\\\\IntegrationM3_R_M\\\\rick_and_morty-ok\\\\rick_and_morty font and back\\\\Front_Client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport Cards from './componentes/Cards/Cards';\nimport Nav from './componentes/Nav/Nav';\nimport { useState, useEffect } from 'react';\nimport { Routes, Route, useLocation, useNavigate } from 'react-router-dom';\nimport Detail from './componentes/Detail/Detail';\nimport About from './componentes/About/About';\nimport Form from './componentes/Form/Form';\nimport Favorites from './componentes/Favorites/Favorites';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  let [characters, setCharacters] = useState([]);\n  const [access, setAccess] = useState(false);\n  const {\n    pathname\n  } = useLocation();\n  const navigate = useNavigate();\n  useEffect(() => {\n    !access && navigate('/');\n  }, [access, navigate]);\n  function onSearch(id) {\n    fetch(`http://localhost:3001/rickandmorty/character/${id}`).then(response => {\n      if (response.ok) {\n        return response.json();\n      } else {\n        throw new Error('Error not found');\n      }\n    }).then(data => {\n      if (data.id !== undefined) {\n        const char = characters === null || characters === void 0 ? void 0 : characters.find(e => e.id === data.id);\n        if (char) {\n          alert(`Character ${id} is already in the list`);\n        } else {\n          setCharacters(characters => [...characters, data]);\n        }\n      } else {\n        alert('Error not found');\n      }\n    }).catch(() => {\n      alert('Character not found');\n    });\n  }\n\n  // const login = async (userData) => {\n  //   try {\n  //     const URL = 'http://localhost:3001/login/';\n  //     const { email, password } = userData;\n\n  //     const params = new URLSearchParams({\n  //       email: email,\n  //       password: password\n  //     }).toString();\n\n  //     const response = await fetch(`${URL}?${params}`);\n  //     const data = await response.json();\n\n  //     const { access } = data;\n  //     console.log(access, userData, data);\n  //     setAccess(access);\n\n  //     if (access === false) {\n  //       alert('Username and password are not registered');\n  //     } else {\n  //       access && navigate('/home');\n  //     }\n  //   } catch (error) {\n  //     alert('Problemas de integración');\n  //   }\n  // };\n\n  const login = async userData => {\n    try {\n      const {\n        email,\n        password\n      } = userData;\n      const hardcodedEmail = 'ddacqua@gmail.com';\n      const hardcodedPassword = '1234dani';\n      if (email === hardcodedEmail && password === hardcodedPassword) {\n        // Las credenciales son válidas\n        setAccess(true);\n        navigate('/home');\n      } else {\n        // Las credenciales no son válidas\n        setAccess(false);\n        alert('Username and password are not registered');\n      }\n    } catch (error) {\n      alert('Problems with integration');\n    }\n  };\n  const onClose = id => {\n    setCharacters(characters.filter(character => Number(character.id) !== Number(id)));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [pathname !== '/' && /*#__PURE__*/_jsxDEV(Nav, {\n      onSearch: onSearch,\n      setAccess: setAccess\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 28\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(Form, {\n          login: login\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/home\",\n        element: /*#__PURE__*/_jsxDEV(Cards, {\n          characters: characters,\n          onClose: onClose\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 38\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/about\",\n        element: /*#__PURE__*/_jsxDEV(About, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 39\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/detail/:id\",\n        element: /*#__PURE__*/_jsxDEV(Detail, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 44\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/favorites\",\n        element: /*#__PURE__*/_jsxDEV(Favorites, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 43\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"8F5/a6w1/O+0VaGQFKzwoEnKG4c=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Cards","Nav","useState","useEffect","Routes","Route","useLocation","useNavigate","Detail","About","Form","Favorites","jsxDEV","_jsxDEV","App","_s","characters","setCharacters","access","setAccess","pathname","navigate","onSearch","id","fetch","then","response","ok","json","Error","data","undefined","char","find","e","alert","catch","login","userData","email","password","hardcodedEmail","hardcodedPassword","error","onClose","filter","character","Number","className","children","fileName","_jsxFileName","lineNumber","columnNumber","path","element","_c","$RefreshReg$"],"sources":["C:/Users/Pc/Desktop/IntegrationM3_R_M/rick_and_morty-ok/rick_and_morty font and back/Front_Client/src/App.js"],"sourcesContent":["import './App.css';\r\nimport Cards from './componentes/Cards/Cards';\r\nimport Nav from './componentes/Nav/Nav';\r\nimport { useState, useEffect } from 'react';\r\nimport { Routes, Route, useLocation, useNavigate } from 'react-router-dom';\r\nimport Detail from './componentes/Detail/Detail';\r\nimport About from './componentes/About/About';\r\nimport Form from './componentes/Form/Form';\r\nimport Favorites from './componentes/Favorites/Favorites';\r\n\r\nfunction App() {\r\n  let [characters, setCharacters] = useState([]);\r\n  const [access, setAccess] = useState(false);\r\n\r\n  const { pathname } = useLocation();\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    !access && navigate('/');\r\n  }, [access, navigate]);\r\n\r\n  function onSearch(id) {\r\n    fetch(`http://localhost:3001/rickandmorty/character/${id}`)\r\n      .then((response) => {\r\n        if (response.ok) {\r\n          return response.json();\r\n        } else {\r\n          throw new Error('Error not found');\r\n        }\r\n      })\r\n      .then((data) => {\r\n        if (data.id !== undefined) {\r\n          const char = characters?.find((e) => e.id === data.id);\r\n          if (char) {\r\n            alert(`Character ${id} is already in the list`);\r\n          } else {\r\n            setCharacters((characters) => [...characters, data]);\r\n          }\r\n        } else {\r\n          alert('Error not found');\r\n        }\r\n      })\r\n      .catch(() => {\r\n        alert('Character not found');\r\n      });\r\n  }\r\n\r\n  // const login = async (userData) => {\r\n  //   try {\r\n  //     const URL = 'http://localhost:3001/login/';\r\n  //     const { email, password } = userData;\r\n\r\n  //     const params = new URLSearchParams({\r\n  //       email: email,\r\n  //       password: password\r\n  //     }).toString();\r\n\r\n  //     const response = await fetch(`${URL}?${params}`);\r\n  //     const data = await response.json();\r\n\r\n  //     const { access } = data;\r\n  //     console.log(access, userData, data);\r\n  //     setAccess(access);\r\n\r\n  //     if (access === false) {\r\n  //       alert('Username and password are not registered');\r\n  //     } else {\r\n  //       access && navigate('/home');\r\n  //     }\r\n  //   } catch (error) {\r\n  //     alert('Problemas de integración');\r\n  //   }\r\n  // };\r\n\r\n  const login = async (userData) => {\r\n    try {\r\n      const { email, password } = userData;\r\n      const hardcodedEmail = 'ddacqua@gmail.com';\r\n      const hardcodedPassword = '1234dani';\r\n  \r\n      if (email === hardcodedEmail && password === hardcodedPassword) {\r\n        // Las credenciales son válidas\r\n        setAccess(true);\r\n        navigate('/home');\r\n      } else {\r\n        // Las credenciales no son válidas\r\n        setAccess(false);\r\n        alert('Username and password are not registered');\r\n      }\r\n    } catch (error) {\r\n      alert('Problems with integration');\r\n    }\r\n  };\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n\r\n  const onClose = (id) => {\r\n    setCharacters(characters.filter((character) => Number(character.id) !== Number(id)));\r\n  };\r\n\r\n  return (\r\n    <div className='container'>\r\n      {pathname !== '/' && <Nav onSearch={onSearch} setAccess={setAccess} />}\r\n      <Routes>\r\n        <Route path='/' element={<Form login={login} />} />\r\n        <Route path='/home' element={<Cards characters={characters} onClose={onClose} />} />\r\n        <Route path='/about' element={<About />} />\r\n        <Route path='/detail/:id' element={<Detail />} />\r\n        <Route path='/favorites' element={<Favorites />} />\r\n      </Routes>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}