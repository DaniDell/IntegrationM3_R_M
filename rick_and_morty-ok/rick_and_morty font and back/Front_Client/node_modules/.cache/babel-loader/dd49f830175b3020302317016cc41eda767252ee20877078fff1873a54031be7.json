{"ast":null,"code":"const validation = data => {\n  const emailRegexp = new RegExp(/\\S+@\\S+\\.\\S+/);\n  const passwordRegexp = new RegExp(/^[a-z0-9_-]{6,10}$/);\n  let errors = {};\n  if (!emailRegexp.test(data.email)) {\n    errors.email = 'You must enter a valid email';\n  }\n  if (!data.email) {\n    errors.emailEmpty = \"You must enter an email\";\n  }\n  if (data.email !== \"ddacqua@gmail.com\") {\n    errors.validEmail = \"This email has an error\";\n  }\n  if (data.email.length > 35) {\n    errors.caracteres = \"It must be an email less than 35 characters\";\n  }\n  if (!passwordRegexp.test(data.password)) {\n    errors.password = \"It must contain lowercase letters and numbers, it must also have a length between 6 and 10 characters\";\n  }\n  if (data.password !== \"1234dani\") {\n    errors.incorrectPass = \"Incorrect password\";\n  }\n  return errors;\n};\nexport default validation;","map":{"version":3,"names":["validation","data","emailRegexp","RegExp","passwordRegexp","errors","test","email","emailEmpty","validEmail","length","caracteres","password","incorrectPass"],"sources":["C:/Users/Pc/Desktop/Integration_R_M/rick_and_morty-ok/rick_and_morty/Front_Client/src/componentes/Form/validation.js"],"sourcesContent":["const validation = (data)  => {\r\n    const emailRegexp = new RegExp(/\\S+@\\S+\\.\\S+/)\r\n\r\n    const passwordRegexp = new RegExp (/^[a-z0-9_-]{6,10}$/)\r\n    \r\n    let errors = {}\r\n\r\n    if(!emailRegexp.test(data.email)) {\r\n        errors.email = 'You must enter a valid email'\r\n    }\r\n\r\n    if(!data.email) {\r\n        errors.emailEmpty = \"You must enter an email\"\r\n    }\r\n    if(data.email !== \"ddacqua@gmail.com\") {\r\n        errors.validEmail = \"This email has an error\"\r\n    }\r\n\r\n    if(data.email.length > 35) {\r\n        errors.caracteres = \"It must be an email less than 35 characters\"\r\n    }\r\n\r\n    if(!passwordRegexp.test(data.password)) {\r\n        errors.password = \"It must contain lowercase letters and numbers, it must also have a length between 6 and 10 characters\"\r\n    }\r\n    if(data.password !== \"1234dani\") {\r\n        errors.incorrectPass = \"Incorrect password\"\r\n    }\r\n\r\n    return errors;\r\n\r\n}\r\n\r\nexport default validation"],"mappings":"AAAA,MAAMA,UAAU,GAAIC,IAAI,IAAM;EAC1B,MAAMC,WAAW,GAAG,IAAIC,MAAM,CAAC,cAAc,CAAC;EAE9C,MAAMC,cAAc,GAAG,IAAID,MAAM,CAAE,oBAAoB,CAAC;EAExD,IAAIE,MAAM,GAAG,CAAC,CAAC;EAEf,IAAG,CAACH,WAAW,CAACI,IAAI,CAACL,IAAI,CAACM,KAAK,CAAC,EAAE;IAC9BF,MAAM,CAACE,KAAK,GAAG,8BAA8B;EACjD;EAEA,IAAG,CAACN,IAAI,CAACM,KAAK,EAAE;IACZF,MAAM,CAACG,UAAU,GAAG,yBAAyB;EACjD;EACA,IAAGP,IAAI,CAACM,KAAK,KAAK,mBAAmB,EAAE;IACnCF,MAAM,CAACI,UAAU,GAAG,yBAAyB;EACjD;EAEA,IAAGR,IAAI,CAACM,KAAK,CAACG,MAAM,GAAG,EAAE,EAAE;IACvBL,MAAM,CAACM,UAAU,GAAG,6CAA6C;EACrE;EAEA,IAAG,CAACP,cAAc,CAACE,IAAI,CAACL,IAAI,CAACW,QAAQ,CAAC,EAAE;IACpCP,MAAM,CAACO,QAAQ,GAAG,uGAAuG;EAC7H;EACA,IAAGX,IAAI,CAACW,QAAQ,KAAK,UAAU,EAAE;IAC7BP,MAAM,CAACQ,aAAa,GAAG,oBAAoB;EAC/C;EAEA,OAAOR,MAAM;AAEjB,CAAC;AAED,eAAeL,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}